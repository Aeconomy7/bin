#!/bin/bash

# Colours ~makeitgood~
NORMAL=$(echo -e "\033[1;0m")
RED=$(echo -e "\033[1;31m")
GREEN=$(echo -e "\033[1;32m")
BLUE=$(echo -e "\033[1;34m")
MAGENTA=$(echo -e "\033[1;35m")
CYAN=$(echo -e "\033[1;36m")

# check that minecraft process is not currently running
PS_CHECK=`ps aux | grep -v grep | grep minecraft_server`
if [ ! -z "$PS_CHECK" ]
then
	echo -n "$RED"
	echo "[-] Minecraft is currently running, please end the server before updating!"
	echo -n "$NORMAL"
	exit 1
fi


# set the new file version
# OLD AND BROKEN, left here as an artifact
#CURR_VER=`curl -s https://www.minecraft.net/en-us/download/server | grep minecraft_server | awk '{ print $1 }' | tail -c +3 | tr -d '\r\n'`
#OLD_VER=`cat /home/sc00by/bin/OMG_LETS_PLAY_MINECRAFT | grep java | awk '{ print $5}'`
#DL_LINK=`curl -s https://www.minecraft.net/en-us/download/server | grep https://launcher.mojang.com/v1/objects/ | sed -r 's/.*href="([^"]+).*/\1/g'`

# NEW AND SHINY, and hopefully more stabled
echo -n "$MAGENTA"
echo "[?] Checking current build hosted by mojang..."
echo -n "$NORMAL"
CURR_VER=`curl -s https://launchermeta.mojang.com/mc/game/version_manifest.json | jq '.latest.release' | tr -d '"'`
CURR_REPO=`curl -s https://launchermeta.mojang.com/mc/game/version_manifest.json | jq '.versions[].url' | grep $CURR_VER.json | tr -d '"'`
SERVER_JAR=`curl -s $CURR_REPO | jq '.downloads[].url' | grep server.jar | tr -d '"'`
OLD_VER=`cat /home/sc00by/bin/OMG_LETS_PLAY_MINECRAFT | grep java | awk '{ print $5}'`


# Debug statement (will be needed if they change the server.jar page)
CURR_VER_FULL=`echo "minecraft_server.$CURR_VER.jar"`
echo "$CURR_VER_FULL vs $OLD_VER"
echo "[DEBUG] CURR_REPO to download: $CURR_REPO"

# check if we are already up to date
if [ "$CURR_VER_FULL" == "$OLD_VER" ]
then
	echo -n "$GREEN"
	echo -n "[+] The server is already up to date on version "
	echo -n "$CYAN"
	echo "$OLD_VER"
	echo -n "$NORMAL"
	exit 1
fi

# navigate to minecraft folder and clear screen
cd /home/sc00by/Minecraft

# found new version
echo -n "$CYAN"
echo -n "Current server version:		"
echo -n "$NORMAL"
echo "$OLD_VER"

echo -n "$CYAN"
echo -n "New update version:		"
echo -n "$NORMAL"
echo "$CURR_VER_FULL"

echo -n "$CYAN"
echo -n "Link to be downloaded:		"
echo -n "$NORMAL"
echo "$SERVER_JAR"

echo "$MAGENTA"
echo -n "Does this look correct? (y/n): "

# double check update is good
read choice

case "$choice" in
	[Yy])
		echo "[+] Excellent, now I will update!"
		;;
	[Nn])
		echo "[-] okay, bye bye then :("
		exit 1
		;;
	*)
		echo -n "$RED"
		echo "[-] INVALID INPUT, EXITTING"
		echo -n "$NORMAL"
		exit 1
esac

# ok download the new server file and properly name it
echo -n "$GREEN"
echo "[+] Downloading new version from $SERVER_JAR"
echo -n "$NORMAL"
wget $SERVER_JAR
sleep 1

echo -n "$GREEN"
echo "[+] Renaming server.jar to $CURR_VER"
echo -n "$NORMAL"
mv server.jar $CURR_VER_FULL

# update the server run script
echo -n "$GREEN"
echo "[+] Updating 'OMG_LETS_PLAY_MINECRAFT'"
sed -i "s;java.*;/home/sc00by/java/jdk-17/bin/java -Xmx4096M -Xms4096M -jar $CURR_VER_FULL nogui;" /home/sc00by/bin/OMG_LETS_PLAY_MINECRAFT
echo "[+] COMPLETED UPDATE :)"
echo -n "$NORMAL"

# ask if you would like to run Minecraft!
echo "$MAGENTA"
echo -n "Would you liek to start Minecraft? (y/n): "
read choice2

case "$choice2" in
	[Yy])
		echo "$CYAN"
		echo "[+] Starting MC server"
		OMG_LETS_PLAY_MINECRAFT
		echo -n "$NORMAL"
		;;
	[Nn])
		;;
	*)
		echo "$RED"
		echo "[-] Twas a simple yes or no, but fine then"
		echo -n "$NORMAL"
esac

# return to current state
cd -

# DONE
echo "$GREEN"
echo "[+] Okay, all done!"
echo -n "$NORMAL"
